{"version":3,"sources":["../src/case.js"],"names":["ensureCase","raw","target","input","String","toUpperCase","word","split","charAt","slice","toLowerCase","TypeError"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEeA,U;;;AAEf,SAASA,UAAT,GAAoD;AAAA,KAAhCC,GAAgC,uEAA1B,EAA0B;AAAA,KAAtBC,MAAsB,uEAAb,WAAa;;AACnD,KAAMC,QAAQC,OAAOH,GAAP,CAAd;;AAEA,SAAQC,MAAR;AACC,OAAK,YAAL;AACC,UAAO,sBAAUC,KAAV,MAAqBA,KAA5B;AACD,OAAK,YAAL;AACC,UAAO,sBAAUA,KAAV,MAAqBA,KAA5B;AACD,OAAK,YAAL;AACC,UAAO,sBAAUA,KAAV,MAAqBA,KAA5B;AACD,OAAK,aAAL;AACC,UAAO,sBAAW,sBAAUA,KAAV,CAAX,MAAiCA,KAAxC;AACD,OAAK,YAAL;AACC,UAAO,uBAAUA,KAAV,MAAqBA,KAA5B;AACD,OAAK,YAAL;AACA,OAAK,WAAL;AACC,UAAOA,MAAME,WAAN,OAAwBF,KAA/B;AACD,OAAK,eAAL;AACA,OAAK,cAAL;AAAqB;AACpB,QAAMG,OAAOH,MAAMI,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAb;AACA,WACCP,WAAWM,KAAKE,MAAL,CAAY,CAAZ,CAAX,EAA2B,YAA3B,KACAR,WAAWM,KAAKG,KAAL,CAAW,CAAX,CAAX,EAA0B,YAA1B,CAFD;AAIA;AACD,OAAK,YAAL;AACA,OAAK,WAAL;AACA,OAAK,WAAL;AAAkB;AACjB,UAAON,MAAMO,WAAN,OAAwBP,KAA/B;AACD;AACC,SAAM,IAAIQ,SAAJ,CAAe,qCAAoCT,MAAO,GAA1D,CAAN;AA3BF;AA6BA","file":"case.js","sourcesContent":["import camelCase from 'lodash.camelcase';\nimport kebabCase from 'lodash.kebabcase';\nimport snakeCase from 'lodash.snakecase';\nimport upperFirst from 'lodash.upperfirst';\nimport startCase from 'lodash.startcase';\n\nexport default ensureCase;\n\nfunction ensureCase(raw = '', target = 'lowercase') {\n\tconst input = String(raw);\n\n\tswitch (target) {\n\t\tcase 'camel-case':\n\t\t\treturn camelCase(input) === input;\n\t\tcase 'kebab-case':\n\t\t\treturn kebabCase(input) === input;\n\t\tcase 'snake-case':\n\t\t\treturn snakeCase(input) === input;\n\t\tcase 'pascal-case':\n\t\t\treturn upperFirst(camelCase(input)) === input;\n\t\tcase 'start-case':\n\t\t\treturn startCase(input) === input;\n\t\tcase 'upper-case':\n\t\tcase 'uppercase':\n\t\t\treturn input.toUpperCase() === input;\n\t\tcase 'sentence-case':\n\t\tcase 'sentencecase': {\n\t\t\tconst word = input.split(' ')[0];\n\t\t\treturn (\n\t\t\t\tensureCase(word.charAt(0), 'upper-case') &&\n\t\t\t\tensureCase(word.slice(1), 'lower-case')\n\t\t\t);\n\t\t}\n\t\tcase 'lower-case':\n\t\tcase 'lowercase':\n\t\tcase 'lowerCase': // Backwards compat config-angular v4\n\t\t\treturn input.toLowerCase() === input;\n\t\tdefault:\n\t\t\tthrow new TypeError(`ensure-case: Unknown target case \"${target}\"`);\n\t}\n}\n"]}